{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/extension/role.enum.ts","webpack:///src/app/core/interceptor/interceptor.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/features/account/api/account.service..ts","webpack:///src/app/features/account/confidants/confidants.component.ts","webpack:///src/app/features/account/confidants/confidants.component.html","webpack:///src/app/features/account/patient-account/patient-account.component.ts","webpack:///src/app/features/account/patient-account/patient-account.component.html","webpack:///src/app/features/account/patient-list/patient-list.component.ts","webpack:///src/app/features/account/patient-list/patient-list.component.html","webpack:///src/app/features/record/api/record.service.ts","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/guard/role-guard.ts","webpack:///src/app/layouts/header/header.component.ts","webpack:///src/app/layouts/header/header.component.html","webpack:///src/app/shared/components/controls-test/controls-test.component.ts","webpack:///src/app/shared/components/controls-test/controls-test.component.html","webpack:///src/app/shared/components/disease-history/disease-history.component.ts","webpack:///src/app/shared/components/disease-history/disease-history.component.html","webpack:///src/app/shared/components/instruction/instruction.component.ts","webpack:///src/app/shared/components/instruction/instruction.component.html","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/missing-translation.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","AuthModule","ArtificialOrganModule","data","roles","Patient","Doctor","tryToRedirect","canActivate","AccountModule","AdminModule","Admin","component","AppRoutingModule","forRoot","imports","AppComponent","authService","translate","router","title","currentUserSubject","localStorage","getItem","currentSubject","asObservable","currentUser","subscribe","x","currentUserValue","localizationEN","use","logout","navigate","setItem","next","value","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","loader","useFactory","HttpLoaderFactory","deps","missingTranslationHandler","useDefaultLang","declarations","providers","bootstrap","http","Role","Interceptor","authenticationService","request","isLoggedIn","token","clone","setHeaders","Authorization","handle","getTokenValue","tokenValue","JSON","parse","model","userValue","er_role","name","AuthenticationService","form","post","apiUrl","pipe","user","stringify","removeItem","put","get","providedIn","AccountService","filter","userId","ConfidantsComponent","formBuilder","accountService","toastr","dialog","confidants","searchControl","doctorList","isPatient","searchActive","list","destroy$","getConfidants","valueChanges","res","getDoctorListByFilter","getDoctorByFilter","some","o","doctorId","getConfidantsInfo","deleteConfidants","success","err","error","Text","addConfidant","Message","complete","PatientAccountComponent","editable","usePaneClass","createForm","initForm","patientForm","valid","updatePatientInfo","patientInfo","diseaseHistoryId","Object","assign","markAsUntouched","markAllAsTouched","group","firstName","required","lastName","country","passport","address","phone","setValue","patientId","config","panelClass","maxWidth","maxHeight","height","width","disableClose","dialogRef","open","openDiseaseHistory","openPatientOrgan","PatientListComponent","patientList","getPatientListByFilter","getPatientByFilter","RecordService","status","recordId","AuthGuard","route","state","queryParams","returnUrl","url","RoleGuard","userRoles","allowedRoles","matchingRoles","indexOf","HeaderComponent","document","setTheme","isDarkTheme","console","log","classList","body","add","remove","localizationUA","Document","ControlsTestComponent","email","password","minLength","testOptions","createdAt","Date","event","checked","control","errors","getErrorMessages","setErrors","description","hasError","onSetTheme","DiseaseHistoryComponent","recordService","getPatientInfo","patient","getDiseaseHistoryInfo","diseaseHistore","createDiseaseHistory","updateDiseaseHistory","InstructionComponent","MaterialModule","MissingTranslationService","params","key","translateService","currentLang","SharedModule","ngModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Role } from './core/extension/role.enum';\nimport { PatientListComponent } from './features/account/patient-list/patient-list.component';\nimport { AuthGuard } from './guard/auth.guard';\nimport { RoleGuard } from './guard/role-guard';\nimport { ControlsTestComponent } from './shared/components/controls-test/controls-test.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'account',\n    pathMatch: 'full'\n  },\n  {\n    path: 'auth',\n    loadChildren: () =>\n      import('./features/auth/auth.module').then(m => m.AuthModule)\n  },\n  {\n    path: 'artificial-organs',\n    loadChildren: () =>\n      import('./features/artificial-organ/artificial-organ.module').then(m => m.ArtificialOrganModule),\n      data: { roles: [Role.Patient, Role.Doctor], tryToRedirect: 'auth' }, canActivate: [AuthGuard, RoleGuard]\n  },\n  {\n    path: 'account',\n    loadChildren: () =>\n      import('./features/account/account.module').then(m => m.AccountModule),\n      canActivate: [AuthGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: () =>\n      import('./features/admin/admin.module').then(m => m.AdminModule),\n      data: { roles: [Role.Admin], tryToRedirect: 'auth' }, canActivate: [AuthGuard, RoleGuard]\n  },\n  {\n    path: 'control', component: ControlsTestComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'patient-list', component: PatientListComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Router, RouterOutlet } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { IUser } from './core/interfaces/user.interface';\nimport { AuthenticationService } from './core/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'AVE';\n  currentUser: IUser;\n\n  private currentUserSubject: BehaviorSubject<string>;\n  public currentSubject: Observable<string>;\n  constructor(private authService: AuthenticationService, private translate: TranslateService, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject<string>(localStorage.getItem('localization'));\n    this.currentSubject = this.currentUserSubject.asObservable();\n    authService.currentUser.subscribe( x => this.currentUser = x);\n  }\n\n  public get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n\n  ngOnInit(): void {\n    if (!this.currentUserValue) {\n      this.localizationEN();\n    }\n    this.translate.use(this.currentUserValue);\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n\n  localizationUA() {\n    localStorage.setItem('localization', 'ua');\n    this.currentUserSubject.next('ua');\n    this.translate.use(this.currentUserValue);\n  }\n\n  localizationEN() {\n    localStorage.setItem('localization', 'en');\n    this.currentUserSubject.next('en');\n    this.translate.use(this.currentUserValue);\n  }\n}\n","<ngx-loading-bar color=\"#21c8e6\" [includeSpinner]=\"false\" height=\"4px\"></ngx-loading-bar>\r\n<div class=\"app-wrapper\">\r\n  <app-header></app-header>\r\n  <div class=\"app-body\">\r\n    <ng-container>\r\n      <div class=\"height-100\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from './shared/shared.module';\nimport { Interceptor } from './core/interceptor/interceptor';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\nimport { HeaderComponent } from './layouts/header/header.component';\nimport { MissingTranslationHandler, TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MissingTranslationService } from './shared/missing-translation.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n      missingTranslationHandler: { provide: MissingTranslationHandler, useClass: MissingTranslationService },\n      useDefaultLang: false,\n    }),\n    SharedModule.forRoot(),\n    LoadingBarHttpClientModule,\n    LoadingBarRouterModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: Interceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateLoader {\n  return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n","export enum Role {\r\n  Patient = 'Patient',\r\n  Doctor = 'Doctor',\r\n  Admin = 'Admin'\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        const isLoggedIn = currentUser && currentUser.token;\r\n        if (isLoggedIn) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { IUser } from 'src/app/core/interfaces/user.interface';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { ISelectInfo } from '../interfaces/select-info.interface';\r\n\r\nconst getTokenValue = (): IUser => {\r\n  const tokenValue = JSON.parse(localStorage.getItem('currentUser'));\r\n  if (tokenValue !== null) {\r\n    const model = jwt_decode(tokenValue?.token) as any;\r\n    const userValue = {\r\n      id: model.id,\r\n      er_role: model.er_role,\r\n      name: model.name,\r\n      token: tokenValue.token\r\n    };\r\n    return userValue;\r\n  }\r\n  return tokenValue;\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  private currentUserSubject: BehaviorSubject<IUser>;\r\n  public currentUser: Observable<IUser>;\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<IUser>(getTokenValue());\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue() {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(form): Observable<any> {\r\n    return this.http.post<any>(environment.apiUrl +  'Account/sign-in', form.value)\r\n    .pipe(map(user => {\r\n      if (user && user.token) {\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n          const userValue = getTokenValue();\r\n          this.currentUserSubject.next(userValue);\r\n      }\r\n      return user;\r\n    }));\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('currentUser');\r\n  }\r\n\r\n  registration(form) {\r\n    return this.http.post<any>(environment.apiUrl +  'Account/sign-up', form);\r\n  }\r\n\r\n  changePassword(form) {\r\n    return this.http.put(environment.apiUrl + 'Account/change-password', form);\r\n  }\r\n\r\n  getMedicalInstitutions(): Observable<ISelectInfo[]> {\r\n    return this.http.get<ISelectInfo[]>(environment.apiUrl +  'MedicalInstituation/autocomplete');\r\n  }\r\n}\r\n","import { IFullUserInfo } from 'src/app/core/interfaces/user.interface';\r\nimport { IConfidant } from './../../../core/interfaces/confidant.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { IAccountInfo } from 'src/app/core/interfaces/account-info.interface';\r\nimport { ISelectInfo } from 'src/app/core/interfaces/select-info.interface';\r\nimport { IPatient } from 'src/app/core/interfaces/patient.interface';\r\nimport { IDoctor } from 'src/app/core/interfaces/doctor.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAccountInfo(): Observable<IAccountInfo> {\r\n    return this.http.get<IAccountInfo>(environment.apiUrl +  'Account/account-info');\r\n  }\r\n\r\n  getConfidantsInfo(): Observable<IConfidant[]> {\r\n    return this.http.get<IConfidant[]>(environment.apiUrl +  'ArtificialOrgan/confidant-info');\r\n  }\r\n\r\n  deleteConfidants(id: number): Observable<any> {\r\n    return this.http.delete(environment.apiUrl +  'ArtificialOrgan/delete-confidant/' + id);\r\n  }\r\n\r\n  addConfidant(id: number): Observable<any> {\r\n    return this.http.post(environment.apiUrl +  'ArtificialOrgan/confidant/' + id, {});\r\n  }\r\n\r\n  updateAccountInfo(model): Observable<any> {\r\n    return this.http.put<any>(environment.apiUrl +  'Account/account-info', model);\r\n  }\r\n\r\n  updatePatientInfo(model): Observable<any> {\r\n    return this.http.put<any>(environment.apiUrl +  'Patient/patient-info', model);\r\n  }\r\n\r\n  updateDoctorInfo(model): Observable<any> {\r\n    return this.http.put<any>(environment.apiUrl +  'Doctor/doctor-info', model);\r\n  }\r\n\r\n  getMedicalInstitutions(): Observable<ISelectInfo[]> {\r\n    return this.http.get<ISelectInfo[]>(environment.apiUrl +  'MedicalInstituation/autocomplete');\r\n  }\r\n\r\n  getPatientByFilter(filter: string): Observable<IPatient[]> {\r\n    return this.http.get<IPatient[]>(environment.apiUrl +  'Patient/patinet-by-filter/' + filter);\r\n  }\r\n\r\n  getDoctorByFilter(filter: string): Observable<IDoctor[]> {\r\n    return this.http.get<IDoctor[]>(environment.apiUrl +  'Doctor/doctor-by-filter/' + filter);\r\n  }\r\n\r\n  getAllUsers(): Observable<IFullUserInfo[]> {\r\n    return this.http.get<IFullUserInfo[]>(environment.apiUrl +  'Account/allUsers');\r\n  }\r\n\r\n  deleteUser(userId: string): Observable<any> {\r\n    return this.http.delete(environment.apiUrl +  'Account/deleteUser?userId=' + userId);\r\n  }\r\n\r\n}\r\n","import { IDoctor } from './../../../core/interfaces/doctor.interface';\nimport { IConfidant } from './../../../core/interfaces/confidant.interface';\nimport { takeUntil } from 'rxjs/internal/operators/takeUntil';\nimport { Input, OnDestroy } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { AccountService } from '../api/account.service.';\nimport { MatSelectChange } from '@angular/material/select';\nimport { DiseaseHistoryComponent } from 'src/app/shared/components/disease-history/disease-history.component';\n\n@Component({\n  selector: 'app-confidants',\n  templateUrl: './confidants.component.html',\n  styleUrls: ['./confidants.component.scss']\n})\nexport class ConfidantsComponent implements OnInit, OnDestroy {\n\n  confidants: IConfidant[] = [];\n  searchControl = new FormControl('');\n  doctorList: IDoctor[] = [];\n  @Input() isPatient = true;\n  @Input() searchActive = true;\n  @Input() list = true;\n\n  private destroy$ = new Subject<void>();\n  constructor(private formBuilder: FormBuilder,\n              private router: Router,\n              private accountService: AccountService,\n              private toastr: ToastrService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.getConfidants();\n    this.searchControl.valueChanges\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(res => this.getDoctorListByFilter(res));\n  }\n\n  getDoctorListByFilter(filter: string) {\n    if (filter && filter !== '') {\n      this.accountService.getDoctorByFilter(filter)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => this.doctorList = res.filter(x => !this.confidants.some(o => o.doctorId === x.id)));\n    }\n  }\n\n  getConfidants(): void {\n    this.accountService.getConfidantsInfo()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.confidants = res;\n        this.getDoctorListByFilter(this.searchControl.value);\n      });\n  }\n\n  deleteConfidant(id: number): void {\n    this.accountService.deleteConfidants(id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toastr.success('Confidant deleted');\n        this.getConfidants();\n      }, err => {\n        this.toastr.error(err.error.Text);\n      } );\n  }\n\n  addConfidant(id: number): void {\n      this.accountService.addConfidant(id)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.toastr.success('Confidant added');\n          this.getConfidants();\n        }, err => {\n          this.toastr.error(err.error.Message);\n        });\n  }\n\n  openPatientOrgan(id: number): void {\n    this.router.navigate(['/artificial-organs/patient-organs/', id]);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","\n<div class=\"row\">\n  <div class=\"col-6\" *ngIf=\"isPatient && searchActive\">\n    <mat-card>\n      <h2> {{ 'Confidant-Info' | translate }}</h2>\n      <div class=\"pt-3\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label> {{ 'Search-Doctor' | translate }} </mat-label>\n            <input  matInput  type=\"text\"  placeholder=\"Type...\" [formControl]=\"searchControl\">\n          </mat-form-field>\n          <br>\n          <ul style=\"list-style: none;\">\n            <ng-container *ngFor=\"let doctor of doctorList\">\n              <li>\n                <div class=\"row\">\n                  <div class=\"col-md-10\">\n                    {{doctor.firstName}}  {{doctor.lastName}} {{doctor.medicalInstitution.name}}\n                  </div>\n                  <div class=\"col-md-2\">\n                    <button mat-button color=\"primary\" (click)='addConfidant(doctor.id)'>  {{ 'Add' | translate }}     </button>\n                  </div>\n                </div>\n              </li>\n            </ng-container>\n          </ul>\n          <br>\n      </div>\n    </mat-card>\n  </div>\n  <div class=\"col-6\" *ngIf=\"list\">\n    <mat-card>\n      <h2> {{ 'My-Confidant-Info' | translate }}</h2>\n      <div class=\"pt-3\">\n        <ul style=\"list-style: none;\">\n          <ng-container *ngFor=\"let confidant of confidants\">\n            <li *ngIf='isPatient'>\n              <div class=\"row\">\n                <div class=\"col-md-10\">\n                  {{confidant.doctor.name}}\n                </div>\n                <div class=\"col-md-2\">\n                  <button mat-button color=\"warn\" (click)='deleteConfidant(confidant.id)'>  {{ 'Delete' | translate }} </button>\n                </div>\n              </div>\n            </li>\n            <li *ngIf='!isPatient'>\n              <div class=\"row\">\n                <div class=\"col-md-10\">\n                  {{confidant.patient.name}}\n                </div>\n                <div class=\"col-md-2\">\n                  <button mat-button color=\"primary\" (click)='openPatientOrgan(confidant.patientId)'>  {{ 'Open' | translate }} </button>\n                  <button mat-button color=\"warn\" (click)='deleteConfidant(confidant.id)'>  {{ 'Delete' | translate }} </button>\n                </div>\n              </div>\n            </li>\n          </ng-container>\n        </ul>\n      </div>\n    </mat-card>\n  </div>\n</div>\n\n\n\n","import { IPatient } from './../../../core/interfaces/patient.interface';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { takeUntil} from 'rxjs/operators';\nimport { AccountService } from '../api/account.service.';\nimport { DiseaseHistoryComponent } from 'src/app/shared/components/disease-history/disease-history.component';\n\n@Component({\n  selector: 'app-patient-account',\n  templateUrl: './patient-account.component.html',\n  styleUrls: ['./patient-account.component.scss']\n})\nexport class PatientAccountComponent implements OnInit, OnDestroy {\n\n\n  @Input() patientInfo: IPatient;\n  @Input() editable = false;\n  @Input() usePaneClass = true;\n\n\n\n  patientForm: FormGroup;\n\n  private destroy$ = new Subject<void>();\n  constructor(private formBuilder: FormBuilder,\n              private router: Router,\n              private accountService: AccountService,\n              private toastr: ToastrService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.initForm();\n  }\n\n  onSubmit(): void {\n    if (this.patientForm.valid) {\n      this.accountService.updatePatientInfo({\n        id: this.patientInfo.id,\n        userId: this.patientInfo.userId,\n        diseaseHistoryId: this.patientInfo.diseaseHistoryId,\n        ...this.patientForm.value\n      }).pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.toastr.success('Patient info updated');\n          Object.assign(this.patientInfo, this.patientForm.value)\n          this.patientForm.markAsUntouched();\n      });\n    } else {\n      this.patientForm.markAllAsTouched();\n    }\n  }\n\n  createForm(): void  {\n    this.patientForm = this.formBuilder.group({\n      firstName: [null, Validators.required],\n      lastName: [null, Validators.required],\n      country: [null, Validators.required],\n      passport: [null, Validators.required],\n      address: [null, Validators.required],\n      phone: [null, Validators.required]\n    });\n  }\n\n  initForm(): void {\n    this.patientForm.get('firstName').setValue(this.patientInfo.firstName);\n    this.patientForm.get('lastName').setValue(this.patientInfo.lastName);\n    this.patientForm.get('country').setValue(this.patientInfo.country);\n    this.patientForm.get('address').setValue(this.patientInfo.address);\n    this.patientForm.get('passport').setValue(this.patientInfo.passport);\n    this.patientForm.get('phone').setValue(this.patientInfo.phone);\n    this.patientForm.markAsUntouched();\n  }\n\n  openDiseaseHistory(patientId: number) {\n    const config = new MatDialogConfig();\n    config.panelClass = `modal-setting`;\n    config.maxWidth = '100vw';\n    config.maxHeight = '100vh';\n    config.height = '100%';\n    config.width = '100%';\n    config.disableClose = true;\n    config.data = { patientId, editable: !this.editable};\n    const dialogRef = this.dialog.open(DiseaseHistoryComponent, config);\n  }\n\n  openPatientOrgan(id: number): void {\n    this.router.navigate(['/artificial-organs/patient-organs/', id]);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","<br>\n<div class=\"row m-2\">\n  <div class=\"col-12\">\n    <mat-card [class.pane]='usePaneClass'>\n      <h2> {{ 'Patient-Info' | translate }}</h2>\n      <form [formGroup]=\"patientForm\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label> {{ 'First-Name' | translate }} </mat-label>\n                    <input placeholder=\"Type first name...\" matInput  type=\"text\" formControlName=\"firstName\"  [readonly]='!editable'>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label> {{ 'Last-Name' | translate }} </mat-label>\n                    <input placeholder=\"Type last name ...\" matInput  type=\"text\" formControlName=\"lastName\" [readonly]='!editable'>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label> {{ 'Country' | translate }} </mat-label>\n                    <input placeholder=\"Type country...\" matInput  type=\"text\" formControlName=\"country\"  [readonly]='!editable'>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label> {{ 'Address' | translate }} </mat-label>\n                    <input placeholder=\"Type address...\" matInput  type=\"text\" formControlName=\"address\"  [readonly]='!editable'>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label> {{ 'Passport' | translate }} </mat-label>\n                    <input placeholder=\"Type passport...\" matInput  type=\"text\" formControlName=\"passport\"  [readonly]='!editable'>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label> {{ 'Phone' | translate }} </mat-label>\n                    <input placeholder=\"Type phone...\" matInput  type=\"text\" formControlName=\"phone\"  [readonly]='!editable'>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <button mat-button color=\"accent\" (click)=\"openDiseaseHistory(patientInfo.id)\">{{ 'OpenDiseaseHistory' | translate }}</button>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group pt-3\">\n                  <button mat-button color=\"accent\" (click)=\"openPatientOrgan(patientInfo.id)\">{{ 'OpenArtificialOrgans' | translate }}</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      <mat-card-actions  *ngIf=\"patientInfo && patientForm.touched && editable\">\n        <button mat-button color=\"primary\" (click)=\"onSubmit()\"> {{ 'Update' | translate }}  </button>\n        <button mat-button color=\"warn\" type=\"button\" (click)=\"initForm()\"> {{ 'Cancel' | translate }} </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n  <div class=\"col-12 pt-3\" *ngIf='editable'>\n      <app-confidants [list]=\"true\" [searchActive]=\"true\"></app-confidants>\n  </div>\n</div>\n\n\n","import { IPatient } from './../../../core/interfaces/patient.interface';\nimport { takeUntil } from 'rxjs/internal/operators/takeUntil';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { AccountService } from '../api/account.service.';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.scss']\n})\nexport class PatientListComponent implements OnInit, OnDestroy {\n\n  private destroy$ = new Subject<void>();\n  searchControl = new FormControl(null);\n  patientList: IPatient[] = [];\n  constructor(private formBuilder: FormBuilder,\n              private accountService: AccountService,\n              private toastr: ToastrService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.searchControl.valueChanges\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(res => this.getPatientListByFilter(res));\n  }\n\n  getPatientListByFilter(filter: string) {\n    this.accountService.getPatientByFilter(filter)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(res => this.patientList = res);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","<div style=\"max-width: 200px;\" class=\"m-auto pt-3\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label> {{ 'Search-Patient' | translate }} </mat-label>\n    <input  matInput  type=\"text\"  placeholder=\"Type...\" [formControl]=\"searchControl\">\n  </mat-form-field>\n  <br>\n</div>\n<ng-container *ngFor=\"let patient of patientList\">\n  <div class=\"list-pane pt-2 m-auto\">\n    <app-patient-account [patientInfo]=\"patient\" [usePaneClass]='false' [editable]=\"false\"></app-patient-account>\n  </div>\n  <br>\n</ng-container>\n\n\n","import { IPatient } from './../../../core/interfaces/patient.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IRecord } from 'src/app/core/interfaces/record.interface';\nimport { ISelectInfo } from 'src/app/core/interfaces/select-info.interface';\nimport { environment } from 'src/environments/environment';\nimport { IDiseaseHistory } from 'src/app/core/interfaces/disease-history.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordService {\n\n  constructor(private http: HttpClient) {}\n\n  getMedicalInstitutions(): Observable<ISelectInfo[]> {\n    return this.http.get<ISelectInfo[]>(environment.apiUrl +  'MedicalInstituation/autocomplete');\n  }\n\n  getDoctorByMedicalInstitution(id: number): Observable<ISelectInfo[]> {\n    return this.http.get<ISelectInfo[]>(environment.apiUrl +  'Doctor/doctors-by-instituation-autocomplete/' + id);\n  }\n\n  createRecord(form): Observable<any> {\n    return this.http.post(environment.apiUrl +  'Record', form);\n  }\n\n  getPatientRecords(): Observable<IRecord[]> {\n    return this.http.get<IRecord[]>(environment.apiUrl +  'Record/patient-records');\n  }\n\n  getPatientRecordsById(patientId: number): Observable<IRecord[]> {\n    return this.http.get<IRecord[]>(environment.apiUrl +  'Record/patient-records-by-id/' + patientId);\n  }\n\n  getDoctorRecords(): Observable<IRecord[]> {\n    return this.http.get<IRecord[]>(environment.apiUrl +  'Record/doctor-records');\n  }\n\n  cancelRecordLikePatient(status: any, recordId: number): Observable<any> {\n    return this.http.put(environment.apiUrl +  'Record/update-status-like-patient?status=' + status + '&recordId=' + recordId, {});\n  }\n\n  updateRecord(form): Observable<any> {\n    return this.http.put(environment.apiUrl +  'Record/update-record', form);\n  }\n\n  updateRecordLikeDoctor(status: any, recordId: number): Observable<any> {\n    return this.http.put(environment.apiUrl +  'Record/update-status-like-doctor?status=' + status + '&recordId=' + recordId, {});\n  }\n\n  getPatientInfo(patientId: number): Observable<IPatient> {\n    return this.http.get<IPatient>(environment.apiUrl +  'Patient/get-by-id/' + patientId);\n  }\n\n  getDiseaseHistoryInfo(patientId: number): Observable<IDiseaseHistory> {\n    return this.http.get<IDiseaseHistory>(environment.apiUrl +  'DiseaseHistory/disease-history-by-patient-id/' + patientId);\n  }\n\n  updateDiseaseHistory(form: IDiseaseHistory): Observable<any> {\n    return this.http.put(environment.apiUrl +  'DiseaseHistory', form);\n  }\n\n  createDiseaseHistory(form: IDiseaseHistory): Observable<any> {\n    return this.http.post(environment.apiUrl +  'DiseaseHistory', form);\n  }\n}\n","import { Route } from \"@angular/compiler/src/core\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthenticationService } from \"../core/services/auth.service\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n          return true;\r\n        }\r\n\r\n        this.router.navigate(['/auth'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n\r\n    canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/auth']);\r\n        return false;\r\n    }\r\n}\r\n","import { AuthenticationService } from './../core/services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const userRoles = this.authenticationService.currentUserValue.er_role;\r\n    const allowedRoles = next.data.roles;\r\n    const matchingRoles = allowedRoles.indexOf(userRoles);\r\n\r\n    if (matchingRoles === -1 && next.data.tryToRedirect) {\r\n      this.router.navigate([next.data.tryToRedirect]);\r\n    }\r\n    return matchingRoles !== -1;\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { Role } from 'src/app/core/extension/role.enum';\r\nimport { IUser } from 'src/app/core/interfaces/user.interface';\r\nimport { AuthenticationService } from 'src/app/core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  currentUser: IUser;\r\n  roles = Role;\r\n  public currentUserSubject: BehaviorSubject<string>;\r\n  public currentSubject: Observable<string>;\r\n  constructor(private authService: AuthenticationService, private router: Router,\r\n              @Inject(DOCUMENT) private document: Document,\r\n              private translate: TranslateService) {\r\n    this.currentUserSubject = new BehaviorSubject<string>(localStorage.getItem('localization'));\r\n    this.currentSubject = this.currentUserSubject.asObservable();\r\n    authService.currentUser.subscribe( x => this.currentUser = x);\r\n    this.setTheme(this.isDarkTheme());\r\n  }\r\n\r\n  public get currentUserValue() {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.currentUser)\r\n    if (!this.currentUserValue) {\r\n      this.localizationEN();\r\n    }\r\n    this.translate.use(this.currentUserValue);\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  localizationUA(): void {\r\n    localStorage.setItem('localization', 'ua');\r\n    this.currentUserSubject.next('ua');\r\n    this.translate.use(this.currentUserValue);\r\n  }\r\n\r\n  localizationEN(): void {\r\n    localStorage.setItem('localization', 'en');\r\n    this.currentUserSubject.next('en');\r\n    this.translate.use(this.currentUserValue);\r\n  }\r\n\r\n  getPatientOrganRoute(): string[] {\r\n   return ['/artificial-organs/patient-organs/' + this.currentUser?.id];\r\n  }\r\n\r\n  setNewTheme(isDarkTheme: boolean) {\r\n    localStorage.setItem('isDarkTheme', JSON.stringify(isDarkTheme));\r\n    this.setTheme(isDarkTheme);\r\n  }\r\n\r\n  setTheme(isDarkTheme: boolean): void {\r\n    const classList = this.document.body.classList;\r\n    if (isDarkTheme) {\r\n      classList.add('theme-alternate');\r\n    } else {\r\n      classList.remove('theme-alternate');\r\n    }\r\n  }\r\n\r\n  isDarkTheme(): boolean {\r\n    let isDarkTheme = JSON.parse(localStorage.getItem('isDarkTheme') || 'false');\r\n    if (typeof isDarkTheme !== 'boolean') {\r\n      isDarkTheme = false;\r\n    }\r\n    return isDarkTheme;\r\n  }\r\n\r\n  isDarkThemeAsync(): Observable<boolean> {\r\n    let isDarkTheme = JSON.parse(localStorage.getItem('isDarkTheme') || 'false');\r\n    if (typeof isDarkTheme !== 'boolean') {\r\n      isDarkTheme = false;\r\n    }\r\n    return of(isDarkTheme);\r\n  }\r\n}\r\n","\r\n<mat-toolbar class=\"dark\">\r\n  <a class=\"navbar-brand\" [routerLink]=\"['/record']\">{{ 'Main-Title-1' | translate }}</a>\r\n  <div class=\"toolbar-spacer\"></div>\r\n  <div class=\"toolbar-spacer\"></div>\r\n  <div class=\"toolbar-spacer\"></div>\r\n\r\n  <ng-container *ngIf=\"currentUser\">\r\n    <mat-menu #appMenu=\"matMenu\">\r\n      <ng-template matMenuContent let-name=\"username\">\r\n        <button mat-menu-item class=\"warn-color\" style=\"text-align: center;\" (click)=\"logout()\">    {{ 'LogOut' | translate }}</button>\r\n        <mat-slide-toggle color=\"warn\" style=\"text-align: center;\" [checked]=\"isDarkThemeAsync() | async\"\r\n        (change)=\"setNewTheme($event.checked);\">{{ 'Use-Dark-Theme' | translate}}</mat-slide-toggle>\r\n      </ng-template>\r\n    </mat-menu>\r\n\r\n    <button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n      <mat-icon color=\"primary\">person</mat-icon>\r\n      <span class=\"username-label primary-color\">{{ currentUser?.name }}</span>\r\n    </button>\r\n  </ng-container>\r\n\r\n  <div class=\"float-right align-content-end\">\r\n    <button mat-stroked-button [disabled]=\"currentUserSubject.value === 'ua'\" type=\"button\" color=\"primary\" (click)=\"localizationUA()\"> {{ 'ua' | translate}} </button>\r\n    <button mat-stroked-button [disabled]=\"currentUserSubject.value === 'en'\" type=\"button\" color=\"primary\" (click)=\"localizationEN()\"> {{ 'en' | translate}} </button>\r\n  </div>\r\n</mat-toolbar>\r\n<nav mat-tab-nav-bar>\r\n  <a mat-tab-link [routerLink]=\"['/account']\" *ngIf=\"currentUser?.er_role == roles[roles.Patient] || currentUser?.er_role == roles[roles.Doctor]\" routerLinkActive #rla=\"routerLinkActive\" [active]=\"rla.isActive\">\r\n    {{ 'Account-Tab' | translate }}\r\n  </a>\r\n  <a mat-tab-link [routerLink]=\"getPatientOrganRoute()\" *ngIf=\"currentUser?.er_role == roles[roles.Patient]\" routerLinkActive #rla1=\"routerLinkActive\" [active]=\"rla1.isActive\">\r\n    {{ 'Artificial-Tab' | translate }}\r\n  </a>\r\n  <a mat-tab-link [routerLink]=\"['/patient-list']\" *ngIf=\"currentUser?.er_role == roles[roles.Doctor]\" routerLinkActive #rla5=\"routerLinkActive\" [active]=\"rla5.isActive\">\r\n    {{ 'Patient-List-Tab' | translate }}\r\n  </a>\r\n  <a mat-tab-link [routerLink]=\"['/admin/med-inst']\" *ngIf=\"currentUser?.er_role == roles[roles.Admin]\" routerLinkActive #rla3=\"routerLinkActive\" [active]=\"rla3.isActive\">\r\n    {{ 'Medical-Instituations' | translate }}\r\n  </a>\r\n  <a mat-tab-link [routerLink]=\"['/admin/users']\" *ngIf=\"currentUser?.er_role == roles[roles.Admin]\" routerLinkActive #rla8=\"routerLinkActive\" [active]=\"rla8.isActive\">\r\n    {{ 'Users' | translate }}\r\n  </a>\r\n</nav>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nexport interface ISelectInfo {\r\n  name: string;\r\n  id: number | string;\r\n  createdAt: Date | null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-controls-test',\r\n  templateUrl: './controls-test.component.html',\r\n  styleUrls: ['./controls-test.component.scss']\r\n})\r\nexport class ControlsTestComponent implements OnInit {\r\n  email: FormControl = new FormControl('', [Validators.required, Validators.email]);\r\n  password: FormControl = new FormControl('', [Validators.required, Validators.minLength(8)]);\r\n\r\n  testOptions: ISelectInfo[] = [\r\n    { id: 0, name: 'Steak', createdAt: new Date() },\r\n    { id: 1, name: 'Pizza', createdAt: new Date() },\r\n    { id: 2, name: 'Tacos', createdAt: new Date() }\r\n  ];\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document) {\r\n  }\r\n\r\n  onSetTheme(event: MatSlideToggleChange): void {\r\n    const classList = this.document.body.classList;\r\n    if (event.checked) {\r\n      classList.add('theme-alternate');\r\n    } else {\r\n      classList.remove('theme-alternate');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  setErrors(control: FormControl): void {\r\n    const errors = this.getErrorMessages(control);\r\n    if (errors) {\r\n      control.setErrors({ description: errors });\r\n    } else {\r\n      control.setErrors(null);\r\n    }\r\n  }\r\n\r\n  getErrorMessages(control: FormControl): any {\r\n    if (control.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n\r\n    if (control.hasError('email')) {\r\n      return 'Not a valid email';\r\n    }\r\n    return control.errors && control.errors[0];\r\n  }\r\n}\r\n","<mat-card class='card-section'>\r\n  <mat-card-title>Controls 💚</mat-card-title>\r\n  <mat-card-subtitle>Please use the next controls</mat-card-subtitle>\r\n  <mat-card-content>\r\n    <mat-accordion>\r\n      <section>\r\n        <div class=\"example-label\">Buttons</div>\r\n        <div class=\"example-button-row\">\r\n          <button mat-raised-button color=\"accent\">Accent button</button>\r\n          <button mat-raised-button color=\"accent\" disabled>Button</button>\r\n          <button mat-button color=\"primary\">\r\n            <mat-icon>publish</mat-icon>Secondary button\r\n          </button>\r\n          <button mat-button color=\"primary\">Text button</button>\r\n          <button mat-button color=\"primary\" disabled>Disabled</button>\r\n          <button mat-button color=\"warn\" class=\"hover-colored\">\r\n            <mat-icon>invert_colors</mat-icon>Color transition button\r\n          </button>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div class=\"example-label\">Checkbox</div>\r\n        <div class=\"example-button-row\">\r\n          <mat-checkbox color=\"accent\">Accent</mat-checkbox>\r\n          <mat-checkbox color=\"warn\" disabled>Disabled</mat-checkbox>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div class=\"example-label\">Radio button</div>\r\n        <div class=\"example-button-row\">\r\n          <mat-radio-group aria-label=\"Select an option\">\r\n            <mat-radio-button value=\"2\" color=\"accent\">Accent</mat-radio-button>\r\n            <mat-radio-button value=\"4\" color=\"warn\" disabled>Disabled</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div class=\"example-label\">Toggle</div>\r\n        <div class=\"example-button-row\">\r\n          <mat-slide-toggle color=\"accent\">Accent</mat-slide-toggle>\r\n          <mat-slide-toggle color=\"warn\" (change)=\"onSetTheme($event)\">Dark theme</mat-slide-toggle>\r\n          <mat-slide-toggle color=\"warn\" disabled>Disabled</mat-slide-toggle>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div class=\"example-label\">Select</div>\r\n        <div class=\"example-button-row\">\r\n          <mat-form-field appearance=\"outline\" color=\"accent\">\r\n            <mat-select color=\"accent\" placeholder=\"Select one\">\r\n              <mat-option *ngFor=\"let option of testOptions\" [value]=\"option.id\">{{option.name}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field appearance=\"outline\" color=\"accent\">\r\n            <mat-select color=\"accent\" placeholder=\"Disabled\" disabled>\r\n              <mat-option *ngFor=\"let option of testOptions\" [value]=\"option.id\">{{option.name}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div class=\"example-label\">Input</div>\r\n        <div class=\"example-button-row\">\r\n          <mat-form-field appearance=\"outline\" color=\"accent\">\r\n            <mat-label>Input description</mat-label>\r\n            <input required matInput placeholder=\"Email\" [formControl]=\"email\">\r\n            <mat-icon matSuffix>alternate_email</mat-icon>\r\n            <mat-hint>Required</mat-hint>\r\n            <mat-error *ngIf=\"email.hasError('required')\">Password is required</mat-error>\r\n            <mat-error *ngIf=\"email.hasError('email')\">Please enter a valid email</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input required matInput placeholder=\"Password\" [formControl]=\"password\">\r\n            <mat-hint>8 digits minimum</mat-hint>\r\n            <mat-error *ngIf=\"password.hasError('required')\">Password is required</mat-error>\r\n            <mat-error *ngIf=\"password.hasError('minlength')\">Minimum password length is 8 characters</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </section>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            All available controls 🔘✅❎\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <section>\r\n          <div class=\"example-label\">Basic</div>\r\n          <div class=\"example-button-row\">\r\n            <button mat-button>Basic</button>\r\n            <button mat-button color=\"primary\">Primary</button>\r\n            <button mat-button color=\"accent\">Accent</button>\r\n            <button mat-button color=\"warn\">Warn</button>\r\n            <button mat-button disabled>Disabled</button>\r\n            <a mat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Raised</div>\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button>Basic</button>\r\n            <button mat-raised-button color=\"primary\">Primary</button>\r\n            <button mat-raised-button color=\"accent\">Accent</button>\r\n            <button mat-raised-button color=\"warn\">Warn</button>\r\n            <button mat-raised-button disabled>Disabled</button>\r\n            <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Stroked</div>\r\n          <div class=\"example-button-row\">\r\n            <button mat-stroked-button>Basic</button>\r\n            <button mat-stroked-button color=\"primary\">Primary</button>\r\n            <button mat-stroked-button color=\"accent\">Accent</button>\r\n            <button mat-stroked-button color=\"warn\">Warn</button>\r\n            <button mat-stroked-button disabled>Disabled</button>\r\n            <a mat-stroked-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Secondary button</div>\r\n          <div class=\"example-button-row\">\r\n            <button mat-flat-button>\r\n              <mat-icon>publish</mat-icon>Basic\r\n            </button>\r\n            <button mat-flat-button color=\"primary\">\r\n              <mat-icon>publish</mat-icon>Primary\r\n            </button>\r\n            <button mat-flat-button color=\"accent\">\r\n              <mat-icon>publish</mat-icon>Accent\r\n            </button>\r\n            <button mat-flat-button color=\"warn\">\r\n              <mat-icon>publish</mat-icon>Warn\r\n            </button>\r\n            <button mat-flat-button disabled>\r\n              <mat-icon>publish</mat-icon>Disabled\r\n            </button>\r\n            <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">\r\n              <mat-icon>publish</mat-icon>Link\r\n            </a>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Flat</div>\r\n          <div class=\"example-button-row\">\r\n            <button mat-flat-button>Basic</button>\r\n            <button mat-flat-button color=\"primary\">Primary</button>\r\n            <button mat-flat-button color=\"accent\">Accent</button>\r\n            <button mat-flat-button color=\"warn\">Warn</button>\r\n            <button mat-flat-button disabled>Disabled</button>\r\n            <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Icon</div>\r\n          <div class=\"example-button-row\">\r\n            <div class=\"example-flex-container\">\r\n              <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\r\n                <mat-icon>more_vert</mat-icon>\r\n              </button>\r\n              <button mat-icon-button color=\"primary\" aria-label=\"Example icon button with a home icon\">\r\n                <mat-icon>home</mat-icon>\r\n              </button>\r\n              <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a menu icon\">\r\n                <mat-icon>menu</mat-icon>\r\n              </button>\r\n              <button mat-icon-button color=\"warn\" aria-label=\"Example icon button with a heart icon\">\r\n                <mat-icon>favorite</mat-icon>\r\n              </button>\r\n              <button mat-icon-button disabled aria-label=\"Example icon button with a open in new tab icon\">\r\n                <mat-icon>open_in_new</mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">FAB</div>\r\n          <div class=\"example-button-row\">\r\n            <div class=\"example-flex-container\">\r\n              <div class=\"example-button-container\">\r\n                <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"example-button-container\">\r\n                <button mat-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\r\n                  <mat-icon>bookmark</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"example-button-container\">\r\n                <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\">\r\n                  <mat-icon>home</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"example-button-container\">\r\n                <button mat-fab disabled aria-label=\"Example icon button with a heart icon\">\r\n                  <mat-icon>favorite</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Mini FAB</div>\r\n          <div class=\"example-button-row\">\r\n            <div class=\"example-flex-container\">\r\n              <div class=\"example-button-container\">\r\n                <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\">\r\n                  <mat-icon>menu</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"example-button-container\">\r\n                <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\">\r\n                  <mat-icon>plus_one</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"example-button-container\">\r\n                <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a filter list icon\">\r\n                  <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"example-button-container\">\r\n                <button mat-mini-fab disabled aria-label=\"Example icon button with a home icon\">\r\n                  <mat-icon>home</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Checkbox</div>\r\n          <div class=\"example-button-row\">\r\n            <mat-checkbox color=\"primary\">Primary</mat-checkbox>\r\n            <mat-checkbox color=\"accent\">Accent</mat-checkbox>\r\n            <mat-checkbox color=\"warn\">Warn</mat-checkbox>\r\n            <mat-checkbox color=\"warn\" disabled>Disabled</mat-checkbox>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Radio button</div>\r\n          <div class=\"example-button-row\">\r\n            <mat-radio-group aria-label=\"Select an option\">\r\n              <mat-radio-button value=\"1\" color=\"primary\">Primary</mat-radio-button>\r\n              <mat-radio-button value=\"2\" color=\"accent\">Accent</mat-radio-button>\r\n              <mat-radio-button value=\"3\" color=\"warn\">Warn</mat-radio-button>\r\n              <mat-radio-button value=\"4\" color=\"warn\" disabled>Disabled</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </section>\r\n        <mat-divider></mat-divider>\r\n        <section>\r\n          <div class=\"example-label\">Toggle</div>\r\n          <div class=\"example-button-row\">\r\n            <mat-slide-toggle color=\"primary\">Primary</mat-slide-toggle>\r\n            <mat-slide-toggle color=\"accent\">Accent</mat-slide-toggle>\r\n            <mat-slide-toggle color=\"warn\">Warn</mat-slide-toggle>\r\n            <mat-slide-toggle color=\"warn\" disabled>Disabled</mat-slide-toggle>\r\n          </div>\r\n        </section>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card class='card-section'>\r\n  <mat-card-title>Typography 🔤</mat-card-title>\r\n  <mat-card-subtitle>Please use the next fonts</mat-card-subtitle>\r\n  <mat-card-content class=\"typography\">\r\n    H1: <h1>Food Grade Non-GMO Waxy Yellow</h1>\r\n    H2: <h2>Food Grade Non-GMO Waxy Yellow</h2>\r\n    H3: <h3>Food Grade Non-GMO Waxy Yellow</h3>\r\n    H4: <h4>Food Grade Non-GMO Waxy Yellow</h4>\r\n    Body 1: <div class=\"mat-body-1\">Food Grade Non-GMO Waxy Yellow</div>\r\n    Body 2: <div class=\"mat-body-2\">Food Grade Non-GMO Waxy Yellow</div>\r\n    Caption: <div class=\"mat-body-2\">Food Grade Non-GMO Waxy Yellow</div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { takeUntil } from 'rxjs/internal/operators/takeUntil';\nimport { IRecord } from 'src/app/core/interfaces/record.interface';\nimport { IPatient } from './../../../core/interfaces/patient.interface';\nimport { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { IDiseaseHistory } from 'src/app/core/interfaces/disease-history.interface';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { RecordService } from 'src/app/features/record/api/record.service';\nimport { RecordStatus } from 'src/app/core/extension/record.enum';\n\n@Component({\n  selector: 'app-disease-history',\n  templateUrl: './disease-history.component.html',\n  styleUrls: ['./disease-history.component.scss']\n})\nexport class DiseaseHistoryComponent implements OnInit, OnDestroy {\n\n  patient: IPatient;\n  diseaseHistore: IDiseaseHistory;\n  private destroy$ = new Subject<void>();\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private recordService: RecordService) { }\n\n  ngOnInit(): void {\n    this.getPatientInfo();\n  }\n\n  getPatientInfo(): void {\n    this.recordService.getPatientInfo(this.data.patientId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        this.patient = res;\n        this.getDiseaseHistoryInfo();\n      });\n  }\n\n  getDiseaseHistoryInfo(): void {\n    this.recordService.getDiseaseHistoryInfo(this.data.patientId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        if (res) {\n          this.diseaseHistore = res;\n        } else {\n          this.diseaseHistore = {\n            id: 0,\n            patientId: this.data,\n            description: '',\n            patient: null\n          };\n        }\n      });\n  }\n\n  updateDiseaseHistory(): void {\n    if (this.data.editable) {\n      if (this.diseaseHistore.id === 0) {\n        this.recordService.createDiseaseHistory(this.diseaseHistore)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.getDiseaseHistoryInfo();\n        });\n      } else {\n        this.recordService.updateDiseaseHistory(this.diseaseHistore)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"full-screen\">\n  <mat-toolbar color=\"primary\">\n    <h1>{{ 'Patient' | translate }} {{patient?.firstName}} {{patient?.lastName}} {{ 'DiseaseHistory' | translate }} </h1>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button type=\"button\" [mat-dialog-close]=\"null\">\n        <mat-icon color=\"primary\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <div class=\"pt-3 mx-1\">\n    <div class=\"form-group pt-5\" *ngIf=\"diseaseHistore\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label> {{ 'Description' | translate }}  </mat-label>\n        <textarea cdkTextareaAutosize style=\"min-height: 100px;\" [(ngModel)]=\"diseaseHistore.description\"  matInput type=\"text\" [readonly]=\"!data.editable\"></textarea>\n      </mat-form-field>\n      <div class=\"form-group pt-2 pb-2 text-center\" *ngIf=\"data.editable\">\n        <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"updateDiseaseHistory()\">\n          {{ 'UpdateDisease' | translate }}\n        </button>\n      </div>\n    </div>\n    <br>\n  </div>\n  <div class=\"spacer\"></div>\n  <div class=\"spacer-beetwen align-bottom  mx-2 p-4\">\n    <button mat-button color=\"warn\" type=\"button\" [mat-dialog-close]=\"true\">\n        {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-instruction',\n  templateUrl: './instruction.component.html',\n  styleUrls: ['./instruction.component.scss']\n})\nexport class InstructionComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) { }\n\n  ngOnInit(): void {\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <h1>{{ 'Instruction' | translate }} </h1>\n  <span class=\"spacer\"></span>\n  <button mat-icon-button type=\"button\" [mat-dialog-close]=\"null\">\n      <mat-icon color=\"primary\">close</mat-icon>\n  </button>\n</mat-toolbar>\n<mat-dialog-content class=\"pt-3 mx-1 h-100\">\n  <div class=\"form-group pt-5\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label> {{ 'Instruction' | translate }}  </mat-label>\n      <textarea style=\"min-height: 500px; max-height: 500px;\" value=\"{{data}}\"  matInput type=\"text\"></textarea>\n    </mat-form-field>\n  </div>\n</mat-dialog-content>\n","import { NgModule } from '@angular/core';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatFormFieldModule  } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule,\r\n  ],\r\n  exports: [\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ],\r\n})\r\nexport class MaterialModule { }\r\n","import { MissingTranslationHandler, MissingTranslationHandlerParams } from '@ngx-translate/core';\r\n\r\nexport class MissingTranslationService implements MissingTranslationHandler {\r\n    handle(params: MissingTranslationHandlerParams) {\r\n      return `WARN: '${params.key}' is missing in '${params.translateService.currentLang}' locale`;\r\n    }\r\n}\r\n","import { ControlsTestComponent } from './components/controls-test/controls-test.component';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from './material.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { DiseaseHistoryComponent } from './components/disease-history/disease-history.component';\r\nimport { InstructionComponent } from './components/instruction/instruction.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [ControlsTestComponent, DiseaseHistoryComponent, InstructionComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    ToastrModule.forRoot(),\r\n    TranslateModule,\r\n    MaterialModule,\r\n    TranslateModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  static forRoot(): ModuleWithProviders<SharedModule> {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //apiUrl: 'https://localhost:5001/api/',\n  apiUrl: 'https://aveserviceapi.azurewebsites.net/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}